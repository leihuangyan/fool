<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.lhy.fool.flr.mapper.FlrStatementitemMapper">

    <!-- 通用查询结果列 -->
    <sql id="BASE_COLUMN_LIST">FID, STATEMENTNUM, WITHHOLDINGNUM, DEPARTMENT, COSTCENTER, OUTSIDELINENUM, TOTALCOST, LINECHARGES, NUMCHARGES, AMORTIZATIONAMOUNT, OTHEREXPENSES, GAP, REMARK, CREATEUSERCODE, CREATETIME, MODIFYUSERCODE, MODIFYTIME, LOGICSTATE</sql>

    <sql id="LOG_STATUS">and LOGICSTATE = 1</sql>
    <sql id="TABLE">T_FLR_STATEMENTITEM</sql>


    <!-- 设置为逻辑删除状态-->
    <sql id="SET_LOGIC_DEL">LOGICSTATE = 2</sql>
    <!-- 取消逻辑删除状态-->
    <sql id="UN_SET_LOGIC_ADD">LOGICSTATE = 1 </sql>

    <!--插入多条数据，并验证空-->
    <sql id="INSERT_COLUMN_VALUE_VERIFY_NULL_LIST">
        #{item.fid,jdbcType=VARCHAR},
        <choose>
        <when test="item.statementnum != null ">#{item.statementnum,jdbcType=VARCHAR}</when>
        <otherwise>null</otherwise>
        </choose>,
        <choose>
        <when test="item.withholdingnum != null ">#{item.withholdingnum,jdbcType=VARCHAR}</when>
        <otherwise>null</otherwise>
        </choose>,
        <choose>
        <when test="item.department != null ">#{item.department,jdbcType=VARCHAR}</when>
        <otherwise>null</otherwise>
        </choose>,
        <choose>
        <when test="item.costcenter != null ">#{item.costcenter,jdbcType=VARCHAR}</when>
        <otherwise>null</otherwise>
        </choose>,
        <choose>
        <when test="item.outsidelinenum != null ">#{item.outsidelinenum,jdbcType=VARCHAR}</when>
        <otherwise>null</otherwise>
        </choose>,
        <choose>
        <when test="item.totalcost != null ">#{item.totalcost,jdbcType=DOUBLE}</when>
        <otherwise>null</otherwise>
        </choose>,
        <choose>
        <when test="item.linecharges != null ">#{item.linecharges,jdbcType=DOUBLE}</when>
        <otherwise>null</otherwise>
        </choose>,
        <choose>
        <when test="item.numcharges != null ">#{item.numcharges,jdbcType=DOUBLE}</when>
        <otherwise>null</otherwise>
        </choose>,
        <choose>
        <when test="item.amortizationamount != null ">#{item.amortizationamount,jdbcType=DOUBLE}</when>
        <otherwise>null</otherwise>
        </choose>,
        <choose>
        <when test="item.otherexpenses != null ">#{item.otherexpenses,jdbcType=DOUBLE}</when>
        <otherwise>null</otherwise>
        </choose>,
        <choose>
        <when test="item.gap != null ">#{item.gap,jdbcType=DOUBLE}</when>
        <otherwise>null</otherwise>
        </choose>,
        <choose>
        <when test="item.remark != null ">#{item.remark,jdbcType=VARCHAR}</when>
        <otherwise>null</otherwise>
        </choose>,
        <choose>
        <when test="item.createusercode != null ">#{item.createusercode,jdbcType=VARCHAR}</when>
        <otherwise>null</otherwise>
        </choose>,
        <choose>
        <when test="item.createtime != null ">#{item.createtime,jdbcType=TIMESTAMP}</when>
        <otherwise>null</otherwise>
        </choose>,
        <choose>
        <when test="item.modifyusercode != null ">#{item.modifyusercode,jdbcType=VARCHAR}</when>
        <otherwise>null</otherwise>
        </choose>,
        <choose>
        <when test="item.modifytime != null ">#{item.modifytime,jdbcType=TIMESTAMP}</when>
        <otherwise>null</otherwise>
        </choose>,
        <choose>
        <when test="item.logicstate != null ">#{item.logicstate,jdbcType=INTEGER}</when>
        <otherwise>null</otherwise>
        </choose>

    </sql>

    <sql id="BASE_COLUMN_VALUE">
      #{item.fid,jdbcType=VARCHAR},
      #{item.statementnum,jdbcType=VARCHAR},
      #{item.withholdingnum,jdbcType=VARCHAR},
      #{item.department,jdbcType=VARCHAR},
      #{item.costcenter,jdbcType=VARCHAR},
      #{item.outsidelinenum,jdbcType=VARCHAR},
      #{item.totalcost,jdbcType=DOUBLE},
      #{item.linecharges,jdbcType=DOUBLE},
      #{item.numcharges,jdbcType=DOUBLE},
      #{item.amortizationamount,jdbcType=DOUBLE},
      #{item.otherexpenses,jdbcType=DOUBLE},
      #{item.gap,jdbcType=DOUBLE},
      #{item.remark,jdbcType=VARCHAR},
      #{item.createusercode,jdbcType=VARCHAR},
      #{item.createtime,jdbcType=TIMESTAMP},
      #{item.modifyusercode,jdbcType=VARCHAR},
      #{item.modifytime,jdbcType=TIMESTAMP},
      #{item.logicstate,jdbcType=INTEGER}
    </sql>

    <!--查询一个对账单项-->
    <select id="selectById" resultType="com.lhy.fool.flr.entity.FlrStatementitem">
        SELECT
        <include refid="BASE_COLUMN_LIST" />
        FROM
        <include refid="TABLE" />
        <where>
            <if test="_parameter != null">
                FID =#{fid,jdbcType=VARCHAR}
            </if>
            <include refid="LOG_STATUS" />
        </where>
    </select>

    <!--查询所有对账单项（导出）-->
    <select id="listAll" resultType="com.lhy.fool.flr.entity.FlrStatementitem">
        SELECT
        <include refid="BASE_COLUMN_LIST" />
        FROM
        <include refid="TABLE" />
        <where>
            <if test="fid != null">
                FID like CONCAT(CONCAT('%', #{fid}), '%')
            </if>
            <if test="department != null">
                and  DEPARTMENT like CONCAT(CONCAT('%', #{department}), '%')
            </if>
            <if test="costcenter != null">
                and  COSTCENTER like CONCAT(CONCAT('%', #{costcenter}), '%')
            </if>
            <if test="outsidelinenum != null">
                and OUTSIDELINENUM like CONCAT(CONCAT('%', #{outsidelinenum}), '%')
            </if>
            <include refid="LOG_STATUS" />
        </where>
    </select>

    <!--根据不同条件查询对账单项明细 (分页)-->
    <select id="listByCondition" resultType="com.lhy.fool.flr.entity.FlrStatementitem">
        SELECT
        <include refid="BASE_COLUMN_LIST" />
        FROM
        <include refid="TABLE" />
        <where>
            <if test="item.fid != null">
                FID like CONCAT(CONCAT('%', #{item.fid}), '%')
            </if>
            <if test="item.department != null">
                and  DEPARTMENT like CONCAT(CONCAT('%', #{item.department}), '%')
            </if>
            <if test="item.costcenter != null">
                and  COSTCENTER like CONCAT(CONCAT('%', #{item.costcenter}), '%')
            </if>
            <if test="item.outsidelinenum != null">
                and OUTSIDELINENUM like CONCAT(CONCAT('%', #{item.outsidelinenum}), '%')
            </if>
            <include refid="LOG_STATUS" />
        </where>
    </select>

    <!--新增一个对账单项-->
    <insert id="insertOne">
        INSERT INTO T_FLR_STATEMENTITEM
        (<include refid="BASE_COLUMN_LIST" />)
        VALUES
        (
        #{fid},
        <choose>
            <when test="statementnum != null ">#{statementnum}</when>
            <otherwise>null</otherwise>
        </choose>,
        <choose>
            <when test="withholdingnum != null ">#{withholdingnum}</when>
            <otherwise>null</otherwise>
        </choose>,
        <choose>
            <when test="department != null ">#{department}</when>
            <otherwise>null</otherwise>
        </choose>,
        <choose>
            <when test="costcenter != null ">#{costcenter}</when>
            <otherwise>null</otherwise>
        </choose>,
        <choose>
            <when test="outsidelinenum != null ">#{outsidelinenum}</when>
            <otherwise>null</otherwise>
        </choose>,
        <choose>
            <when test="totalcost != null ">#{totalcost}</when>
            <otherwise>null</otherwise>
        </choose>,
        <choose>
            <when test="linecharges != null ">#{linecharges}</when>
            <otherwise>null</otherwise>
        </choose>,
        <choose>
            <when test="numcharges != null ">#{numcharges}</when>
            <otherwise>null</otherwise>
        </choose>,
        <choose>
            <when test="amortizationamount != null ">#{amortizationamount}</when>
            <otherwise>null</otherwise>
        </choose>,
        <choose>
            <when test="otherexpenses != null ">#{otherexpenses}</when>
            <otherwise>null</otherwise>
        </choose>,
        <choose>
            <when test="gap != null ">#{gap}</when>
            <otherwise>null</otherwise>
        </choose>,
        <choose>
            <when test="remark != null ">#{remark}</when>
            <otherwise>null</otherwise>
        </choose>,
        <choose>
            <when test="createusercode != null ">#{createusercode}</when>
            <otherwise>null</otherwise>
        </choose>,
        <choose>
            <when test="createtime != null ">#{createtime}</when>
            <otherwise>null</otherwise>
        </choose>,
        <choose>
            <when test="modifyusercode != null ">#{modifyusercode}</when>
            <otherwise>null</otherwise>
        </choose>,
        <choose>
            <when test="modifytime != null ">#{modifytime}</when>
            <otherwise>null</otherwise>
        </choose>,
        <choose>
            <when test="logicstate != null ">#{logicstate}</when>
            <otherwise>null</otherwise>
        </choose>
        )
    </insert>

    <!--新增一批对账单项-->
    <insert id="insertArray">
        INSERT ALL
        <foreach collection="list" item="item" >
        INTO T_FLR_STATEMENTITEM (<include refid="BASE_COLUMN_LIST" />)
        VALUES (<include refid="INSERT_COLUMN_VALUE_VERIFY_NULL_LIST" />)
        </foreach> SELECT 1 FROM DUAL
    </insert>

    <!--修改对账单-->
    <update id="updateRemarks">
        UPDATE T_FLR_STATEMENTITEM
        <set>
            <if test="remark!=null and remark!=''">
                REMARK=#{remark,jdbcType=VARCHAR},
            </if>
        </set>
        <where>
            <if test="fid!=null and fid!=''">
                FID =#{fid,jdbcType=VARCHAR}
            </if>
        </where>
    </update>

    <!--删除对账单（逻辑）-->
    <update id="deleteLogicById">
        UPDATE T_FLR_STATEMENTITEM SET <include refid="SET_LOGIC_DEL" />  WHERE FID = #{fid,jdbcType=VARCHAR}
    </update>

    <!--批量删除对账单（逻辑）-->
    <update id="deleteLogicByIds">
        UPDATE T_FLR_STATEMENTITEM SET <include refid="SET_LOGIC_DEL" />  WHERE FID IN
        <foreach collection="ids" item="id" open="(" close=")" separator=",">
            #{id,jdbcType=VARCHAR}
        </foreach>
    </update>

    <!--删除对账单-->
    <delete id="deleteById">
        DELETE FROM  T_FLR_STATEMENTITEM WHERE FID = #{fid,jdbcType=VARCHAR}
    </delete>

    <!--批量删除对账单-->
    <delete id="deleteByIds">
        DELETE FROM  T_FLR_STATEMENTITEM WHERE FID IN
        <foreach collection="ids" item="id" open="(" close=")" separator=",">
            #{id,jdbcType=VARCHAR}
        </foreach>
    </delete>



</mapper>

